{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "The Movies APP API Documentation",
    "description": "My Movies APP API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "movies-api-assignment-rzh.herokuapp.com",
  "basepath": "/",
  "tags": [
    {
      "name": "Movies",
      "description": "API for movies in the system"
    },
    {
      "name": "Users",
      "description": "API for users in the system"
    },
    {
      "name": "TVs",
      "description": "API for tvs in the system"
    },
    {
      "name": "Creators",
      "description": "API for creators in the system"
    }
  ],
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "schemas": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/movies": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Get all movies in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Movies"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/movies/{id}": {
      "get": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Movies"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The movie id",
            "required": "true",
            "type": "string"
          }
        ],
        "summary": "Get specific movie in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Not Found this movie"
          }
        }
      }
    },
    "/api/movies/{id}/reviews": {
      "get": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Movies"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The movie id",
            "required": "true",
            "type": "string"
          }
        ],
        "summary": "Get specific movie in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Not Found this movie"
          }
        }
      }
    },
    "/api/movies/search/{query}": {
      "get": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Movies"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "description": "The search string",
            "required": "true",
            "type": "string"
          }
        ],
        "summary": "Search movie in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Not Found this movie"
          }
        }
      }
    },
    "/api/upcoming/{page}": {
      "get": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Movies"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "description": "The page number",
            "required": "true",
            "type": "string"
          }
        ],
        "summary": "Get upcoming movies in system by page",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Not Found this movie"
          }
        }
      }
    },
    "/api/movies/page/{page}": {
      "get": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Movies"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "description": "The page number",
            "required": "true",
            "type": "string"
          }
        ],
        "summary": "Get movies in system by page",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Not Found this movie"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "consumes": "application/json",
        "produces": "application/json",
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "description": "Choose the type",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "username and password",
            "schema": {
              "$ref": "#/definitions/UserAuth"
            }
          }
        ],
        "summary": "Register or login with the username and password",
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "$ref": "#/definitions/AuthSuccess"
            }
          },
          "201": {
            "description": "Successful created a user"
          },
          "401": {
            "description": "Authentication failed. Wrong password."
          }
        }
      }
    },
    "/api/users/{username}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's name",
            "required": "true",
            "type": "string"
          }
        ],
        "summary": "Delete specific user in system",
        "responses": {
          "200": {
            "description": "Deleted User"
          },
          "401": {
            "description": "Fail to delete the user"
          }
        }
      }
    },
    "/api/users/{userName}/favourites": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "The user's name",
            "required": "true",
            "type": "string"
          }
        ],
        "summary": "get specific user's favourites in the system",
        "responses": {
          "201": {
            "description": "favourite movie's id"
          },
          "500": {
            "description": "Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "The user's name",
            "required": "true",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "movieId",
            "schema": {
              "$ref": "#/definitions/MovieId"
            }
          }
        ],
        "summary": "add specific user's favourites in the system",
        "responses": {
          "401": {
            "description": "The movie has been added to favourites"
          },
          "201": {
            "description": "Success"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/api/users/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user's id",
            "required": "true",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "user's info",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "summary": "Modify the user's info",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/api/users/{userName}/ratings": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "The user's name",
            "required": "true",
            "type": "string"
          }
        ],
        "summary": "get spefific user's ratings in the system",
        "responses": {
          "201": {
            "description": "rated tvs' informations"
          },
          "500": {
            "description": "Internet Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "The user's name",
            "required": "true",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "rateObj",
            "schema": {
              "$ref": "#/definitions/rateObj"
            }
          }
        ],
        "summary": "add specific user's favourites in the system",
        "responses": {
          "401": {
            "description": "The rating mark is not valid!"
          },
          "201": {
            "description": "Success"
          },
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "The user's name",
            "required": "true",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The tv's id",
            "required": "true",
            "type": "interger"
          }
        ],
        "summary": "Delete specific rating in system",
        "responses": {
          "200": {
            "description": "Deleted User's rating"
          },
          "401": {
            "description": "Not Found this rating"
          }
        }
      }
    },
    "/api/users/{username}/ratings/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's name",
            "required": "true",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The tv's id",
            "required": "true",
            "type": "string"
          }
        ],
        "summary": "get specific rating of user",
        "responses": {
          "201": {
            "description": "Success"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/api/users/{username}/list": {
      "post": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's name",
            "required": "true",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "listObj",
            "schema": {
              "$ref": "#/definitions/ListObj"
            }
          }
        ],
        "summary": "Create list in system",
        "responses": {
          "201": {
            "description": "Create successfully"
          },
          "500": {
            "description": "Error"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's name",
            "required": "true",
            "type": "string"
          }
        ],
        "summary": "get lists in system",
        "responses": {
          "201": {
            "description": "Success"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/api/users/{username}/list/{id}": {
      "post": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's name",
            "required": "true",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The request movie id",
            "required": "true",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "listObj",
            "schema": {
              "$ref": "#/definitions/ListMovieId"
            }
          }
        ],
        "summary": "post movies to list in system",
        "responses": {
          "201": {
            "description": "Create successfully"
          },
          "401": {
            "description": "The movie has been added"
          },
          "500": {
            "description": "Error"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user's name",
            "required": "true",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The request movie id",
            "required": "true",
            "type": "string"
          }
        ],
        "summary": "get list by id in system",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Not found"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/api/{username}/recommend": {
      "get": {
        "tags": [
          "Users"
        ]
      },
      "security": [
        {
          "Authorization": []
        }
      ],
      "summary": "Get the recommend movies for the specific user",
      "parameters": [
        {
          "name": "username",
          "in": "path",
          "description": "The user's name",
          "required": "true",
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "OK"
        },
        "401": {
          "description": "Not found"
        },
        "500": {
          "description": "Error"
        }
      }
    },
    "/api/tvs": {
      "get": {
        "tags": [
          "TVs"
        ],
        "summary": "Get all tvs in the system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TV"
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/api/tvs/todaytv/page/{page}": {
      "get": {
        "tags": [
          "TVs"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "description": "The request page",
            "required": "true",
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The tv's sort method",
            "type": "interger"
          }
        ],
        "summary": "Get today tvs in the system by page",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TV"
            }
          },
          "500": {
            "description": "ERROR"
          }
        }
      }
    },
    "/api/tvs/populartv/page/{page}": {
      "get": {
        "tags": [
          "TVs"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "description": "The request page",
            "required": "true",
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The tv's sort method",
            "type": "interger"
          }
        ],
        "summary": "Get popular tvs in the system by page",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TV"
            }
          },
          "500": {
            "description": "ERROR"
          }
        }
      }
    },
    "/api/tvs/topratedtv/page/{page}": {
      "get": {
        "tags": [
          "TVs"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "description": "The request page",
            "required": "true",
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The tv's sort method",
            "type": "interger"
          }
        ],
        "summary": "Get Toprate tvs in the system by page",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TV"
            }
          },
          "500": {
            "description": "ERROR"
          }
        }
      }
    },
    "/api/tvs/hottv": {
      "get": {
        "tags": [
          "TVs"
        ],
        "summary": "Get hot tvs in the system by page",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TV"
            }
          },
          "500": {
            "description": "ERROR"
          }
        }
      }
    },
    "/api/tvs/{id}": {
      "get": {
        "tags": [
          "TVs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The request id",
            "required": "true",
            "type": "string"
          }
        ],
        "summary": "Get specific tv by id",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TV"
            }
          },
          "500": {
            "description": "ERROR"
          }
        }
      }
    },
    "/api/tvs/{id}/ratings": {
      "get": {
        "tags": [
          "TVs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The request id",
            "required": "true",
            "type": "string"
          }
        ],
        "summary": "Get specific tv ratings by id",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Rating"
            }
          },
          "500": {
            "description": "ERROR"
          }
        }
      }
    },
    "/api/tvs/{id}/similar": {
      "get": {
        "tags": [
          "TVs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The request id",
            "required": "true",
            "type": "string"
          }
        ],
        "summary": "Get specific tv' similar tvs by id",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TV"
            }
          },
          "500": {
            "description": "ERROR"
          }
        }
      }
    },
    "/api/tvs/search/{page}": {
      "get": {
        "tags": [
          "TVs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The request id",
            "required": "true",
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "The search query",
            "required": "true",
            "type": "string"
          }
        ],
        "summary": "Get specific tv by searching string",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TV"
            }
          },
          "500": {
            "description": "ERROR"
          }
        }
      }
    },
    "/api/tvs/{id}/reviews": {
      "get": {
        "tags": [
          "TVs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The request id",
            "required": "true",
            "type": "string"
          }
        ],
        "summary": "Get specific tv reviews by id",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          },
          "500": {
            "description": "ERROR"
          }
        }
      }
    },
    "/api/creators/{id}": {
      "get": {
        "tags": [
          "Creators"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The request id",
            "required": "true",
            "type": "string"
          }
        ],
        "summary": "Get specific creator by id",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Creator"
            }
          },
          "500": {
            "description": "ERROR"
          }
        }
      }
    }
  },
  "definitions": {
    "Movie": {
      "properties": {
        "_id": {
          "type": "ObjectId",
          "uniqueItems": "true"
        },
        "adult": {
          "type": "boolean"
        },
        "backdrop_path": {
          "type": "string"
        },
        "genres_ids": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "original_language": {
          "type": "string"
        },
        "original_title": {
          "type": "string"
        },
        "overview": {
          "type": "string"
        },
        "popularity": {
          "type": "number"
        },
        "poster_path": {
          "type": "string"
        },
        "release_date": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "video": {
          "type": "boolean"
        },
        "vote_average": {
          "type": "boolean"
        },
        "vote_count": {
          "type": "interger"
        },
        "page": {
          "type": "number"
        },
        "reviews": {
          "type": "array",
          "$ref": "#/definitions/Review"
        },
        "upcomingPage": {
          "type": "number"
        }
      }
    },
    "Movies": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Movie"
      }
    },
    "TV": {
      "properties": {
        "adult": {
          "type": "boolean"
        },
        "backdrop_path": {
          "type": "string"
        },
        "genres_ids": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "original_language": {
          "type": "string"
        },
        "original_title": {
          "type": "string"
        },
        "overview": {
          "type": "string"
        },
        "popularity": {
          "type": "number"
        },
        "poster_path": {
          "type": "string"
        },
        "release_date": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "video": {
          "type": "boolean"
        },
        "vote_average": {
          "type": "boolean"
        },
        "vote_count": {
          "type": "interger"
        },
        "todayPage": {
          "type": "interger"
        },
        "popularPage": {
          "type": "interger"
        },
        "topRatedPage": {
          "type": "interger"
        },
        "hot": {
          "type": "boolean"
        },
        "ratings": {
          "type": "array",
          "$ref": "#/definitions/Rating"
        },
        "similar": {
          "type": "string",
          "description": "TVS"
        },
        "reviews": {
          "type": "array",
          "$ref": "#/definitions/Review"
        }
      }
    },
    "TVs": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TV"
      }
    },
    "User": {
      "properties": {
        "_id": {
          "type": "ObjectId",
          "uniqueItems": "true"
        },
        "username": {
          "type": "string",
          "uniqueItems": "true"
        },
        "password": {
          "type": "string",
          "description": "Should contain upper case char, lower case char and number. The length should be larger than 8"
        },
        "favourites": {
          "type": "array",
          "$ref": "#/definitions/Movie"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/List"
          }
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "UserAuth": {
      "properties": {
        "username": {
          "type": "string",
          "required": "true"
        },
        "password": {
          "type": "string",
          "required": "true"
        }
      }
    },
    "AuthSuccess": {
      "properties": {
        "success": "boolean",
        "token": "string"
      }
    },
    "MovieId": {
      "properties": {
        "id": "integer"
      }
    },
    "rateObj": {
      "properties": {
        "id": "number",
        "rating": "number"
      }
    },
    "Review": {
      "properties": {
        "author": {
          "$ref": "#/definitions/Author"
        },
        "content": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "update_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "Author": {
      "properties": {
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "avatar_path": {
          "type": "string"
        },
        "rating": {
          "type": "number"
        }
      }
    },
    "Rating": {
      "properties": {
        "rate": {
          "type": "number"
        },
        "tv": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "Creator": {
      "properties": {
        "credit_id": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "tvs": {
          "type": "array",
          "$ref": "#/definitions/TV"
        },
        "movies": {
          "type": "array",
          "$ref": "#/definitions/Movies"
        },
        "known_for_department": {
          "type": "string"
        },
        "profile_path": {
          "type": "string"
        },
        "popularity": {
          "type": "number"
        }
      }
    },
    "List": {
      "properties": {
        "id": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "movies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Movie"
          }
        }
      }
    },
    "ListObj": {
      "properties": {
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "ListMovieId": {
      "properties": {
        "id": "integer"
      }
    }
  }
}